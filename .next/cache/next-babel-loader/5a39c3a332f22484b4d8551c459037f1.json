{"ast":null,"code":"var _jsxFileName = \"/home/mgyaykal/Desktop/hacker-next/components/Comment.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nconst Comment = ({\n  comment\n}) => __jsx(\"div\", {\n  className: \"jsx-2663812380\" + \" \" + \"comment\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 2,\n    columnNumber: 5\n  }\n}, __jsx(\"div\", {\n  className: \"jsx-2663812380\" + \" \" + \"comment-user\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 7\n  }\n}, comment.user), __jsx(\"div\", {\n  dangerouslySetInnerHTML: {\n    __html: comment.content\n  },\n  className: \"jsx-2663812380\" + \" \" + \"comment-content\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 7\n  }\n}), comment.comments && __jsx(\"div\", {\n  className: \"jsx-2663812380\" + \" \" + \"nested-comments\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }\n}, comment.comments.map(nestedComment => __jsx(Comment, {\n  key: nestedComment.id,\n  comment: nestedComment,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }\n}))), __jsx(_JSXStyle, {\n  id: \"2663812380\",\n  __self: this\n}, \".comment.jsx-2663812380{margin-bottom:1.5em;}.comment-user.jsx-2663812380{font-size:0.9rem;font-weight:bold;margin-bottom:0.5em;}.comment-content.jsx-2663812380{font-size:0.9rem;}.comment-content.jsx-2663812380 p{margin:0;margin-bottom:0.5em;word-wrap:break-word;}.comment-content.jsx-2663812380 a{color:#f60;-webkit-text-decoration:underline;text-decoration:underline;}.comment-content.jsx-2663812380 pre{max-width:100%;overflow:scroll;}.nested-comments.jsx-2663812380{margin-top:1em;border-left:1px solid rgba(0,0,0,0.1);padding-left:1em;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21neWF5a2FsL0Rlc2t0b3AvaGFja2VyLW5leHQvY29tcG9uZW50cy9Db21tZW50LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWVrQixBQUcrQixBQUdILEFBS0EsQUFHUixBQUtFLEFBSUksQUFJQSxTQVpLLEVBS00sSUFJVixBQUl5QixFQXJCeEIsQUFLbkIsR0FSQSxTQVl1QixFQVN2QixHQWpCc0IsZ0JBU3RCLEdBWW1CLENBcEJuQixnQkFxQkEsQ0FUQSIsImZpbGUiOiIvaG9tZS9tZ3lheWthbC9EZXNrdG9wL2hhY2tlci1uZXh0L2NvbXBvbmVudHMvQ29tbWVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IENvbW1lbnQgPSAoeyBjb21tZW50IH0pID0+IChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbW1lbnRcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29tbWVudC11c2VyXCI+e2NvbW1lbnQudXNlcn08L2Rpdj5cbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3NOYW1lPVwiY29tbWVudC1jb250ZW50XCJcbiAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBjb21tZW50LmNvbnRlbnQgfX1cbiAgICAgIC8+XG4gICAgICB7Y29tbWVudC5jb21tZW50cyAmJiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibmVzdGVkLWNvbW1lbnRzXCI+XG4gICAgICAgICAge2NvbW1lbnQuY29tbWVudHMubWFwKG5lc3RlZENvbW1lbnQgPT4gKFxuICAgICAgICAgICAgPENvbW1lbnQga2V5PXtuZXN0ZWRDb21tZW50LmlkfSBjb21tZW50PXtuZXN0ZWRDb21tZW50fSAvPlxuICAgICAgICAgICkpfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICl9XG4gIFxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAuY29tbWVudCB7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMS41ZW07XG4gICAgICAgIH1cbiAgICAgICAgLmNvbW1lbnQtdXNlciB7XG4gICAgICAgICAgZm9udC1zaXplOiAwLjlyZW07XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gICAgICAgIH1cbiAgICAgICAgLmNvbW1lbnQtY29udGVudCB7XG4gICAgICAgICAgZm9udC1zaXplOiAwLjlyZW07XG4gICAgICAgIH1cbiAgICAgICAgLmNvbW1lbnQtY29udGVudCA6Z2xvYmFsKHApIHtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gICAgICAgICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICAgICAgICB9XG4gICAgICAgIC5jb21tZW50LWNvbnRlbnQgOmdsb2JhbChhKSB7XG4gICAgICAgICAgY29sb3I6ICNmNjA7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgICAgIH1cbiAgICAgICAgLmNvbW1lbnQtY29udGVudCA6Z2xvYmFsKHByZSkge1xuICAgICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgICBvdmVyZmxvdzogc2Nyb2xsO1xuICAgICAgICB9XG4gICAgICAgIC5uZXN0ZWQtY29tbWVudHMge1xuICAgICAgICAgIG1hcmdpbi10b3A6IDFlbTtcbiAgICAgICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDFlbTtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvZGl2PlxuICApO1xuICBcbiAgZXhwb3J0IGRlZmF1bHQgQ29tbWVudDsiXX0= */\\n/*@ sourceURL=/home/mgyaykal/Desktop/hacker-next/components/Comment.js */\"));\n\nexport default Comment;","map":{"version":3,"sources":["/home/mgyaykal/Desktop/hacker-next/components/Comment.js"],"names":["Comment","comment","user","__html","content","comments","map","nestedComment","id"],"mappings":";;;;;AAAA,MAAMA,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACZ;AAAA,sCAAe,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA,sCAAe,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA+BA,OAAO,CAACC,IAAvC,CADF,EAEE;AAEE,EAAA,uBAAuB,EAAE;AAAEC,IAAAA,MAAM,EAAEF,OAAO,CAACG;AAAlB,GAF3B;AAAA,sCACY,iBADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAMGH,OAAO,CAACI,QAAR,IACC;AAAA,sCAAe,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGJ,OAAO,CAACI,QAAR,CAAiBC,GAAjB,CAAqBC,aAAa,IACjC,MAAC,OAAD;AAAS,EAAA,GAAG,EAAEA,aAAa,CAACC,EAA5B;AAAgC,EAAA,OAAO,EAAED,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADH,CAPJ;AAAA;AAAA;AAAA,43FADJ;;AAiDE,eAAeP,OAAf","sourcesContent":["const Comment = ({ comment }) => (\n    <div className=\"comment\">\n      <div className=\"comment-user\">{comment.user}</div>\n      <div\n        className=\"comment-content\"\n        dangerouslySetInnerHTML={{ __html: comment.content }}\n      />\n      {comment.comments && (\n        <div className=\"nested-comments\">\n          {comment.comments.map(nestedComment => (\n            <Comment key={nestedComment.id} comment={nestedComment} />\n          ))}\n        </div>\n      )}\n  \n      <style jsx>{`\n        .comment {\n          margin-bottom: 1.5em;\n        }\n        .comment-user {\n          font-size: 0.9rem;\n          font-weight: bold;\n          margin-bottom: 0.5em;\n        }\n        .comment-content {\n          font-size: 0.9rem;\n        }\n        .comment-content :global(p) {\n          margin: 0;\n          margin-bottom: 0.5em;\n          word-wrap: break-word;\n        }\n        .comment-content :global(a) {\n          color: #f60;\n          text-decoration: underline;\n        }\n        .comment-content :global(pre) {\n          max-width: 100%;\n          overflow: scroll;\n        }\n        .nested-comments {\n          margin-top: 1em;\n          border-left: 1px solid rgba(0, 0, 0, 0.1);\n          padding-left: 1em;\n        }\n      `}</style>\n    </div>\n  );\n  \n  export default Comment;"]},"metadata":{},"sourceType":"module"}